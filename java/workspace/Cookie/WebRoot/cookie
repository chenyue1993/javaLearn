Cookie：保留住会话的状态
	1、Cookie是什么？作用？保存在哪里？
		- 翻译过来：曲奇饼干
		- Cookie可以保存会话状态，但是这个会话状态是保留在客户端上
		- 只有Cookie清除或Cookie失效，这个会话状态就没有了
		- Cookie可以保存在浏览器的缓存中，浏览器关闭Cookie消失
		- Cookie也可以保存在客户端的硬盘文件中，浏览器关闭Cookie还在，除非Cookie消失
	2、Cookie只有在javaweb中有吗？	
		- Cookie不止在javaweb中
		- 只有是web项目，只要是B/S架构系统，只要基于HTTP协议，就有Cookie的存在
		- Cookie这种机制是HTTP规定的
	3、Cookie实现的功能，常见的有哪些？
		- 保留购物车商品的状态在客户端上
		- 十天内免登陆
		。。。。。。
	4、在java中Cookie被当做类来处理，使用new运算符可以创建Cookie对象，而且Cookie由两部分组成
		分别是Cookie的name和value，都是字符串类型
	5、在java程序中怎么创建Cookie？
		Cookie cookie = new Cookie(String name,String value)
	6、服务器可以一次向浏览器发送多个Cookie
	7、默认情况下，服务器发送Cookie给浏览器后，浏览器将Cookie保存在缓存中，只有不关闭浏览器，Cookie永远存在，并且有效
		当浏览器关闭后，缓存职工的Cookie将别清除
	8、在浏览器客户端无论是硬盘文件还是缓存中保存的Cookie，什么时候回再次发送给服务器呢？
		- 浏览器会不会提交发送这些Cookie给服务器，和路径有关系
		- 请求路径和Cookie是紧密相连的
		- 不同的请求路径会发送提交不同Cookie
	9、默认情况下Cookie会和哪些路径绑定在一起？
		/webappname/test/createandsendCookieToBrowser 请求服务器，服务器生产Cookie，并且发送给浏览器
		浏览器职职工的Cookie会默认和"test/"这个路径绑定在一起，以后只要发送“test/”浏览器就会向服务器发送Cookie
		/webappname/a			Cookie会和/webappname/这个路径绑定在一起
	10、其实路径可以指定，可以通过java程序进行设置，保证Cookie和某个特定的路径绑定在一起
		cookie.setPath("/webappname/king");
		Cookie将和“/wabappname/king”路径绑定在一起
		只有发送“/wabappname/king”请求路径，浏览器才会提交Cookie给服务器
	11、默认情况下没有设置Cookie的有效时长，才Cookie默认被保存在浏览器的缓存中，只要浏览器关闭Cookie消失
		我们可以通过设置Cookie的有效时长，以保证Cookie保存在硬盘文件中，但这个有效时长必须大于零，换句话说，只有
		设置Cookie的有效时长大于零，则该Cookie会被保存在客户端硬盘文件中，有效时长过去后，硬盘文件中的Cookie失效
			cookie=0直接被删除
			Cookie<0不会被存储
			Cookie>0直接存储在硬盘，秒
		cookie.setMaxAge(int second)
		
	12、服务器怎么接收Cookie？
		//从request对象中获取所有提交的Cookie
		Cookie[] cookies = req.getCookies();
		if (cookies != null) {
			for (Cookie cookie : cookies) {
				String cookieName = cookie.getName();
				String cookieValue = cookie.getValue();
				System.out.println(cookieName+":"+cookieValue);
			}
		}
		
	13、浏览器可以禁用Cookie：服务器发送的Cookie浏览器不接受
		
	14、Cookie的步骤
		创建Cookie对象	 new Cookie(String name,String value)
		设置Cookie有效时间【保存到电脑硬盘】 cookie.setMaxAge(int second)
		设置路径【浏览器访问服务器时将cookie发送的路径】 cookie.setPath(String path)
		绑定cookie【从服务器发送给浏览器】 response.addCookie(Cookie cookie)
		
		接收Cookie Cookie[] request.getCookies()
		获取cookie的name和value	String cookie.getName()
								String cookie.getValue()