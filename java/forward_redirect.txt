web系统资源跳转的途径
	1、跳转方式有两种：
		- 转发 forward
		- 重定向 redirect
	2、转发和重定向代码怎么完成？
		-转发
			request.getRequestDispatcher("/d").forward(request,response);
		-重定向
			response.sendRedirect("./d");
	3、转发和重定向的相同点和不同点
		-相同点	都可以完成资源跳转
		-不同点	转发是request对象触发，重定向是response触发
				转发一次请求，地址不会改变，重定向两次请求，地址会改变（状态码：302）		
				转发在本项目内完成跳转，重定向到路径需要添加webapp的跟路径，可以跨app跳转资源
	4、跳转的下一次资源可以是什么？
		可以是web服务器的任何一种资源：可以说Serlvet，也可以是HTML，可以说JSP......
	5、什么时候采用转发？什么时候采用重定向？
		- 若想完成跨app跳转必须使用重定向
		- 若在上一资源向request中存储了数据，希望在下一个资源中从request范围中将数据取出，必须使用转发
		- 重点向可以解决浏览器刷新问题
	6、重定向的原理是什么？
		- response.sendRedirect("/jd/login");
		程序执行到以上代码，将请求路径反馈给浏览器，浏览器又自动先服务器发送一个全新的请求:/jd/login
		浏览器地址栏上最终显示的地址是：/jd/login
	7、在浏览器上点击一个超链接到最终网页停下来不一定是一次请求	
	
	8、重定向可以解决页面刷新问题
		转发刷新一次就执行一次请求，重定向只执行页面对应的请求
		
	